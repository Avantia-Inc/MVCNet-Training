@model MvcTraining.Web.Areas.Online.Models.Customer


@using (Ajax.BeginForm("CreateCustomer", new AjaxOptions() { UpdateTargetId = "register-form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Customer</legend>

        @Html.HiddenFor(model => model.FirstName)
        @Html.HiddenFor(model => model.LastName)
        @Html.HiddenFor(model => model.Email)
        @Html.HiddenFor(model => model.Telephone)

        <div class="editor-label">
            @Html.LabelFor(model => model.BillingStreet)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BillingStreet)
            @Html.ValidationMessageFor(model => model.BillingStreet)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BillingApartment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BillingApartment)
            @Html.ValidationMessageFor(model => model.BillingApartment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BillingCity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BillingCity)
            @Html.ValidationMessageFor(model => model.BillingCity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BillingState)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BillingState)
            @Html.ValidationMessageFor(model => model.BillingState)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BillingZip)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BillingZip)
            @Html.ValidationMessageFor(model => model.BillingZip)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UseBillingAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UseBillingAddress)
            @Html.ValidationMessageFor(model => model.UseBillingAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShippingStreet)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShippingStreet)
            @Html.ValidationMessageFor(model => model.ShippingStreet)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShippingApartment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShippingApartment)
            @Html.ValidationMessageFor(model => model.ShippingApartment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShippingCity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShippingCity)
            @Html.ValidationMessageFor(model => model.ShippingCity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShippingState)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShippingState)
            @Html.ValidationMessageFor(model => model.ShippingState)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShippingZip)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShippingZip)
            @Html.ValidationMessageFor(model => model.ShippingZip)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
